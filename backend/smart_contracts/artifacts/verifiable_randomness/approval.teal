#pragma version 8
intcblock 0 1
bytecblock 0x 0x72616e646f6d6e6573735f626561636f6e 0x0000000000000000 0x0100000000000000000000000000000000 0x0000000000000001
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xd71058a5 // "commit(uint64,uint16)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0xe424700e // "integers(uint64,application)uint64[]"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub integerscaster_13
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub commitcaster_12
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l11
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_3
intc_1 // 1
return
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_2
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_1
intc_1 // 1
return

// prefix_key_gen
prefixkeygen_0:
proto 1 1
pushbytes 0x636f6d6d69746d656e7473 // "commitments"
frame_dig -1
concat
retsub

// create
create_1:
proto 0 0
intc_0 // 0
bytec_1 // "randomness_beacon"
app_global_get_ex
store 3
store 2
load 3
!
assert
bytec_1 // "randomness_beacon"
pushint TMPL_RANDOMNESS_BEACON_APP_ID // TMPL_RANDOMNESS_BEACON_APP_ID
app_global_put
retsub

// update
update_2:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_3:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// commit
commit_4:
proto 2 0
frame_dig -2
global Round
>
assert
frame_dig -2
itob
callsub prefixkeygen_0
frame_dig -1
itob
extract 6 0
app_global_put
retsub

// integers
integers_5:
proto 2 1
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
frame_dig -2
global Round
<=
assert
frame_dig -2
itob
callsub prefixkeygen_0
app_global_get
intc_0 // 0
extract_uint16
frame_bury 1
bytec_0 // ""
frame_bury 2
frame_dig 2
len
itob
extract 6 0
frame_dig 2
concat
frame_bury 2
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
bytec_1 // "randomness_beacon"
app_global_get
itxn_field ApplicationID
pushbytes 0x189392c5 // "get(uint64,byte[])byte[]"
itxn_field ApplicationArgs
frame_dig -2
itob
itxn_field ApplicationArgs
frame_dig 2
itxn_field ApplicationArgs
itxn_submit
bytec_2 // 0x0000000000000000
bytec_2 // 0x0000000000000000
callsub prnginit_7
intc_0 // 0
store 4
bytec_0 // ""
store 5
integers_5_l1:
load 4
frame_dig 1
<
bz integers_5_l3
load 5
callsub prngrandint_11
itob
concat
store 5
load 4
intc_1 // 1
+
store 4
b integers_5_l1
integers_5_l3:
frame_dig 1
itob
extract 6 0
load 5
concat
frame_bury 0
retsub

// prng_setseq_step
prngsetseqstep_6:
proto 0 0
load 0
pushbytes 0x2360ed051fc65da44385df649fccf645 // 0x2360ed051fc65da44385df649fccf645
b*
load 1
b+
bytec_3 // 0x0100000000000000000000000000000000
b%
store 0
retsub

// prng_init
prnginit_7:
proto 2 0
bytec_2 // 0x0000000000000000
store 0
frame_dig -1
pushbytes 0x0000000000000002 // 0x0000000000000002
b*
bytec 4 // 0x0000000000000001
b+
bytec_3 // 0x0100000000000000000000000000000000
b%
store 1
callsub prngsetseqstep_6
load 0
frame_dig -2
b+
bytec_3 // 0x0100000000000000000000000000000000
b%
store 0
callsub prngsetseqstep_6
retsub

// twos_complement
twoscomplement_8:
proto 1 1
frame_dig -1
itob
b~
bytec 4 // 0x0000000000000001
b+
store 6
load 6
len
pushint 8 // 8
==
bnz twoscomplement_8_l2
load 6
intc_1 // 1
extract_uint64
retsub
twoscomplement_8_l2:
load 6
btoi
retsub

// __prng_rotation_64
prngrotation64_9:
proto 2 1
frame_dig -2
frame_dig -1
shr
frame_dig -2
frame_dig -1
callsub twoscomplement_8
pushint 63 // 63
&
shl
|
retsub

// prng_rotation
prngrotation_10:
proto 0 1
load 0
extract 0 8
btoi
load 0
extract 8 8
btoi
^
load 0
extract 0 1
btoi
pushint 2 // 2
shr
callsub prngrotation64_9
retsub

// prng_randint
prngrandint_11:
proto 0 1
callsub prngsetseqstep_6
callsub prngrotation_10
retsub

// commit_caster
commitcaster_12:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
extract_uint16
frame_bury 1
frame_dig 0
frame_dig 1
callsub commit_4
retsub

// integers_caster
integerscaster_13:
proto 0 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 2
frame_dig 1
frame_dig 2
callsub integers_5
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
concat
log
retsub