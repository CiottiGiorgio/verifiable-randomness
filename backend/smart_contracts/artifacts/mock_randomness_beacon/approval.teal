#pragma version 8
intcblock 0 1
bytecblock 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l4
txna ApplicationArgs 0
pushbytes 0x47c20c23 // "must_get(uint64,byte[])byte[]"
==
bnz main_l3
err
main_l3:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mustgetcaster_3
intc_1 // 1
return
main_l4:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l9
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l9:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// must_get
mustget_2:
proto 2 1
bytec_0 // ""
pushbytes TMPL_MOCK_VRF_OUTPUT // TMPL_MOCK_VRF_OUTPUT
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// must_get_caster
mustgetcaster_3:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
frame_dig 1
frame_dig 2
callsub mustget_2
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
concat
log
retsub